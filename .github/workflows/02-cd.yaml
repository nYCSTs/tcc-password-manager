name: CD

# Alterar depois pra branch main
on: 
  push:
    branches: [8-testar-workflow-ci-cd]

defaults:
  run:
    shell: bash

jobs:
  deploy_homolog:
    environment: homolog
    name: 'Deploy to homolog'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Config GitHub
        run: |
          git config --global user.email "${{secrets.GIT_USER_EMAIL}}"
          git config --global user.name "${{secrets.GIT_USER_NAME}}"
  
      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

     # Ferramentas DAST

     #ZAP BASELINE SCAN (290 estrelas)
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.TOKEN_GIT }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://hml-tcc-password-manager.vercel.app'
          cmd_options: '-a' #indica ataque ativo, onde o zap tenta atuar como um atacante em busca de vulnerabilidades
          allow_issue_writing: 'true'
          #fail_action: 'true'
          artifact_name: 'zap_baseline_scan'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap_baseline_scan
          path: |
            ${{ github.workspace }}/zap_baseline_scan

      - name: Save Results
        if: always()
        run: |
          git clone "https://x-access-token:${{secrets.TOKEN_GIT}}@github.com/tcc-lucas-dafne/${{secrets.NAME_REPO_GIT}}" ${{secrets.NAME_REPO_GIT}}
          cd ${{secrets.NAME_REPO_GIT}}
          git checkout develop
          mkdir -p ${{secrets.NAME_REPO_GIT}}/reports/zap_baseline_scan
          unzip ${{ github.workspace }}/zap_baseline_scan.zip -d ${{ sgithub.workspace }}/reports/zap_baseline_scan
          cp -R ${{github.workspace}}/zap_baseline_scan ${{secrets.NAME_REPO_GIT}}/reports/zap_baseline_scan
          git commit -m "Adicionando relatório no repositório ${{ github.event.repository.name }} ${{ github.ref_name }}"
          git push origin develop


      #ZAP FULL SCAN (290 estrelas)
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.TOKEN_GIT }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://hml-tcc-password-manager.vercel.app'
          cmd_options: '-a'
          allow_issue_writing: 'true'
          #fail_action: 'true'
          artifact_name: 'zap_full_scan'
      
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap_full_scan
          path: |
            ${{ github.workspace }}/zap_full_scan

      - name: Save Results
        if: always()
        run: |
          mkdir -p ${{ github.workspace }}/zap_full_scan
          mv ${{ github.workspace }}/report_html.html ${{ github.workspace }}/zap_full_scan/report_html.html
          git clone "https://x-access-token:${{secrets.TOKEN_GIT}}@github.com/tcc-lucas-dafne/${{secrets.NAME_REPO_GIT}}" ${{secrets.NAME_REPO_GIT}}
          mkdir -p ${{secrets.NAME_REPO_GIT}}/reports/zap_full_scan_reports
          cp -R ${{github.workspace}}/zap_full_scan ${{secrets.NAME_REPO_GIT}}/reports/zap_full_scan_reports
          cd ${{secrets.NAME_REPO_GIT}}
          git commit -m "Adicionando relatório no repositório ${{ github.event.repository.name }} ${{ github.ref_name }}"
          git push

      # SQL MAP
      - name: Prepare environment
        run: |
          echo "START_DATE=$(date +'%d-%m-%YT%H-%M-%S-%Z')" >> $GITHUB_ENV
          echo "START_TIMESTAMP=$(date +'%s')" >> $GITHUB_ENV
          TMP_TARGET="https://hml-tcc-password-manager.vercel.app"
          echo "TARGET=$TMP_TARGET" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Scan with sqlmap
        uses: thereisnotime/action-sqlmap@master
        with:
          url: ${{ env.TARGET }}
          additional_args: "--batch --crawl=2 --random-agent --forms --level=5 --risk=3"

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "👷 chore(sqlmap): add report for ${{ env.TARGET }}-${{ env.START_DATE }}-${{ env.START_TIMESTAMP }}"
          add: "./reports"
          pull: "--rebase --autostash"

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck report
          path:  ${{github.workspace}}/reports
